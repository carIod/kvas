#!/bin/bash
. /apps/kvas/build/library.run

APP_VER_FULL_TEXT="${version}-${stage}-${release}"
APP_FULL_PATH="${APPS_ROOT}/${APP_NAME}"

makefile="${APP_FULL_PATH}/build/Makefile"

sed -i "s/\(APP_VER=\).*/\1${APP_VER_FULL_TEXT}/" "${APP_FULL_PATH}"/opt/bin/main/setup

POST_INST=$(cat < "${APP_FULL_PATH}"/build/postinst)
POST_TERM=$(cat < "${APP_FULL_PATH}"/build/postrm \
			| sed 's/\$/\$\$/g' \
			| sed "s/@app_ver/${APP_VER_FULL_TEXT}/g" \
			)

cat <<EOF > "${makefile}"
include \$(TOPDIR)/rules.mk

PKG_NAME:=${APP_NAME}
PKG_VERSION:=${version}
PKG_RELEASE:=${stage}_${release}
PKG_BUILD_DIR:=\$(BUILD_DIR)/\$(PKG_NAME)

include \$(INCLUDE_DIR)/package.mk

define Package/${APP_NAME}
	SECTION:=utils
	CATEGORY:=Keendev
	DEPENDS:=+jq +curl +knot-dig +nano-full +cron +bind-dig +dnsmasq-full +ipset +dnscrypt-proxy2 \
		+iptables +shadowsocks-libev-ss-redir +shadowsocks-libev-config +libpcre
	URL:=no
	TITLE:=VPN клиент для обработки запросов по внесению хостов в белый список.
	PKGARCH:=all
endef

define Package/${APP_NAME}/description
	Данный пакет позволяет осуществлять контроль и поддерживать в актуальном состоянии
	список разблокировки хостов или "Белый список". При обращении к любому хосту из
	этого списка, весь трафик будет идти через любое VPN или через Shadowsocks соединение,
	заранее настроенное на роутере.
endef

define Build/Prepare
endef
define Build/Configure
endef
define Build/Compile
endef

# Во время инсталляции задаем папку в которую будем
# копировать наш скрипт и затем копируем его в эту папку
define Package/${APP_NAME}/install

	\$(INSTALL_DIR) \$(1)/opt/etc/init.d
	\$(INSTALL_DIR) \$(1)/opt/etc/ndm/fs.d
	\$(INSTALL_DIR) \$(1)/opt/etc/ndm/netfilter.d
	\$(INSTALL_DIR) \$(1)/opt/"${APP_FULL_PATH}"

	\$(INSTALL_BIN) ./files/etc/ndm/fs.d/100-ipset \$(1)/opt/etc/ndm/fs.d
	\$(INSTALL_BIN) ./files/etc/ndm/netfilter.d/100-proxy-redirect \$(1)/opt/etc/ndm/netfilter.d
	\$(INSTALL_BIN) ./files/etc/ndm/netfilter.d/100-dns-local \$(1)/opt/etc/ndm/netfilter.d

	\$(INSTALL_BIN) ./files/etc/init.d/S96${APP_NAME} \$(1)/opt/etc/init.d
	\$(CP) ./files/. \$(1)/opt/"${APP_FULL_PATH}"

endef

#---------------------------------------------------------------------
# Скрипт создаем, который выполняется после инсталляции пакета
# Задаем в кроне время обновления ip адресов хостов
#---------------------------------------------------------------------
define Package/${APP_NAME}/postinst

${POST_INST}

endef

#---------------------------------------------------------------------
# Создаем скрипт, который выполняется при удалении пакета
# Удаляем из крона запись об обновлении ip адресов
#---------------------------------------------------------------------
define Package/${APP_NAME}/postrm

${POST_TERM}

endef

\$(eval \$(call BuildPackage,${APP_NAME}))
EOF

cd "${APPS_ROOT}"/entware || exit

make_link="${APPS_ROOT}"/entware/package/utils/${APP_NAME}/Makefile

[ -f "${make_link}" ] || {
	ln -s "${makefile}" "${make_link}";
	echo "Makefile успешно создан"
}