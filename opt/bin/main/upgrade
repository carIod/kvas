#!/bin/sh
#--------------------------------------------------------------------------------------------------------------
#
#	Файл обновления пакета
#
#--------------------------------------------------------------------------------------------------------------
RED="\033[1;31m";
GREEN="\033[1;32m";
BLUE="\033[36m";
NOCL="\033[m";

LENGTH=68
print_line()(printf "%83s\n" | tr " " "-")
diff_len() {
        charlen=$(echo "${1}" | sed -r "s/[\]033\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g")
        charlen=${#charlen}
        echo $(( LENGTH - charlen ))
}
ready() {
        size=$(diff_len "${1}")
        printf "%b%-${size}s%b" "${1}"
}
when_ready() (echo -e "${GREEN}ГОТОВО${NOCL}")
when_err() (echo -e "${RED}ОШИБКА${NOCL}" )

package_url=$(curl -sH "Accept: application/vnd.github.v3+json" https://api.github.com/repos/qzeleza/kvas/releases/latest | sed -n 's/.*browser_download_url\": "\(.*\)\"/\1/p;'| tr -d ' ' |  sed '/^$/d')
package_name=$(echo "${package_url}" | sed 's/.*\/\(.*ipk\)$/\1/')
list_backup=/opt/etc/hosts.list.kvas
hosts_list=/opt/etc/hosts.list
kvas_conf=/opt/etc/kvas.conf

# по умолчанию включаем режим обновления Кваса
UPDATE_MODE=true
#--------------------------------------------------------------------------------------------------------------
# Режим обновления имеет значения
# пусто - обычный режим проверки версии обновления
# force  - режим с полным удалением пакета и принудительным обновлением, даже если версии одинаковые
#--------------------------------------------------------------------------------------------------------------
install_mode="${1}"
# Режим удаления пакета: пусто - оставляем все файлы конфигурации,
# full - полное удаление пакета со всеми файлами конфигурации
if [ "${install_mode}" = full ] ; then
	remove_mode=full
	install_mode=''
	UPDATE_MODE=false
else
	remove_mode="${2}"
fi

clear
print_line

#	Проверяем - следует ли обновляться ?
if [ "${install_mode}" = force ] ; then
#	при форсированной установке флаг меняем - Новая установка Кваса
	UPDATE_MODE=false
else
	if [ -f /opt/bin/kvas ] && [ -f /opt/etc/kvas.conf ]; then
	#	Обновление Кваса
		prev_ver=$(cat < /opt/etc/kvas.conf | grep -E 'VERSION|RELEASE' | tr -d '\n' | tr '-' '_' | sed 's/^APP_VERSION=\(.*\)APP_RELEASE=\(.*\)/\1-\2\n/')
		next_ver=$(echo "${package_name}" |  sed 's/kvas_\(.*\)_all.*/\1/')
		if [ "${prev_ver}" = "${next_ver}" ] ; then
			ready "Квас все еще свеж! Обновлений" && echo -e "${GREEN}НЕ ТРЕБУЕТСЯ${NOCL}"
			print_line
			exit 1
		fi
	else
	#	Новая установка Кваса если нет основных файлов Кваса
		UPDATE_MODE=false
	fi
fi

version=$(echo "${package_name}" | sed 's/kvas_\(.*\)_all.*/\1/; s/-/ /g; s/_/-/' )
#	prev_path=$(pwd)
echo -e "${GREEN}Установка пакета КВАС версии ${version}${NOCL}"

cd /opt && mkdir -p /opt/packages || {
	echo "Невозможно создать папку /opt/packages";
	exit 1
}
print_line
ready 'Обновляем библиотеку пакетов opkg...'
{
	opkg install && opkg upgrade && opkg install curl iptables
} &>/dev/null && when_ready || when_err


ready 'Загружаем пакет...'
{

	cd /opt/packages
	rm -f "/opt/packages/${package_name}"
	curl -sOL "${package_url}"

} &>/dev/null && when_ready || when_err

! [ -f "${package_name}" ] && {
	echo -e "${RED}Файл пакета не сохранен!${NOCL}"
	echo -e "${RED}Проверьте свое интернет соединение!${NOCL}"
	print_line
	exit 1
}

rm_tmp_cache(){
	exec 2> err.stdout
	find / | grep '/tmp'  | grep -v "${package_name}" | grep kvas | xargs rm -rf
	rm -f err.stdout; exec 2>&1
}

if [ -f /opt/bin/kvas ] && kvas | grep -q 'Настройка пакета не завершена' ; then
	ready 'Удаляем незавершенную ранее установку пакета ...'
	kvas uninstall "${remove_mode}" yes &>/dev/null && when_ready || when_err
	rm_tmp_cache
else
	if [ -f /opt/bin/kvas ]; then
		ready 'Сохраняем список разблокировки в архив...'
		cp "${hosts_list}" "${list_backup}" &>/dev/null && when_ready || when_err
		ver=$(grep "APP_VERSION=" "${kvas_conf}" | cut -d'=' -f2)
		rel=$(grep "APP_RELEASE=" "${kvas_conf}" | cut -d'=' -f2)
		ready "Удаляем предыдущую версию пакета  [${ver} ${rel}]..."
		kvas uninstall "${remove_mode}" yes &>/dev/null && when_ready || when_err
		rm_tmp_cache
	fi
fi


ready "Устанавливаем новую версию пакета [${version}]..."
{
	opkg install "/opt/packages/${package_name}"

} &>/dev/null && when_ready || when_err

print_line

if ! [ -f /opt/bin/kvas ] ; then
	echo -e "${RED}Пакет установлен некорректно - отсутствуют исполняемые файлы!${NOCL}"
	echo -e "${GREEN}Попробуйте установить пакет вручную командой "
	echo -e "${BLUE}'opkg install /opt/packages/${package_name}'${NOCL}"
	print_line
	exit 1
else
	sleep 1

	clear
	kvas setup install "${UPDATE_MODE}" && {
		[ -f "${list_backup}" ] && {
			ready 'Восстанавливаем список разблокировки из архива...'
			cp "${list_backup}" "${hosts_list}" && \
			mv "${list_backup}" "/opt/etc/.kvas/backup" &>/dev/null && when_ready || when_err
		}

		echo 'Тестируем настройки...'
		kvas test upgrade
	}


fi
