#!/bin/sh
. /opt/apps/kvas/bin/libs/main
. /opt/apps/kvas/bin/libs/vpn

# В случае проблем с инсталляцией пакета ставим в значение true
ANSWER_AGH=n

log_in_file(){
	if [ "${1}" = line ]; then
		print_line >> "${INSTALL_LOG}"
	else
		echo "${1}" >> "${INSTALL_LOG}"
	fi
}



# Проверяем отключено ли использование DNS провайдера
setup_test_provider_dns(){
	if ! curl -s "${LOCALHOST_IP}"':79/rci/opkg/dns-override' | grep -q true ; then
		cli="$(get_router_host)/a"
		log_in_file "ОШИБКА: Не отключено использование DNS провайдера."
		echo -e "${RED}Для корректной работы DNS сервера необходимо отключить использование DNS провайдера!${NOCL}"
		echo -e "С этой целью зайдите в админ панель роутера по адресу: ${GREEN}${cli}${NOCL}"
		echo "и выполните последовательно три следующих команды: "
		print_line
		echo -e "1. ${GREEN}opkg dns-override ${NOCL} 			- отключаем использование DNS провайдера,"
		echo -e "2. ${GREEN}system configuration save ${NOCL}  	- сохраняем изменения,"
		echo -e "3. ${GREEN}system reboot ${NOCL} 				- перегружаем роутер."
		print_line
		exit 1
	fi
}

setup_print_welcome(){

	[ -n "${APP_RELEASE}" ] && full_version="${APP_VERSION} ${APP_RELEASE}" || full_version="${APP_VERSION}"
	welcome="Установка пакета ${GREEN}КВАС™${NOCL} версии ${GREEN}${full_version}${NOCL}"
	echo -e "${welcome}"
	print_line

	log_in_file "${welcome}"
	log_in_file line
	log_in_file "Начало установки: $(date "${DATE_FORMAT}")"
	log_in_file line
}
setup_adguard(){

	if cmd_adguardhome_status | grep -qE "(ВКЛЮЧЕН|ОТКЛЮЧЕН)" ; then
		warning "На роутере обнаружен AdGuard Home "
		read_ynq_timer "Установить AdGuard Home, как основной DNS сервер" ANSWER_AGH Y 10
		if [ "${ANSWER_AGH}" = q ] ; then exit_q; exit 1; fi
		if echo "${ANSWER_AGH}" | grep -qi y; then
			cmd_adguardhome_on
			log_in_file "AdGuard Home НАСТРОЕН, как основной DNS сервер"
		else
			log_in_file "AdGuard Home пропущен."
			cmd_adguardhome_status | grep -q "ВКЛЮЧЕН" && {
				ready "Останавливаем сервис AdGuard Home..."
				/opt/etc/init.d/S99adguardhome stop &> /dev/null
				if /opt/etc/init.d/S99adguardhome status | grep -q dead; then
					when_ok "УСПЕШНО"
				else
					when_bad "ОШИБКА"
					mess="Невозможно остановить сервис AdGuard Home"
					error "${mess}"
					log_in_file "ОШИБКА: ${mess}"
					exit 1
				fi
			}
			cp /opt/etc/AdGuardHome/AdGuardHome.yaml "${KVAS_BACKUP_PATH}"/AdGuardHome.yaml
		fi
		print_line
	fi
}

setup_restore_prev_conf(){
	if [ -f "${UNBLOCK_LIST_FILE}.kvas" ]; then
		warning "Обнаружен список разблокировки от предыдущей установки"
		log_in_file "Список разблокировки ВОССТАНОВЛЕН из архива."
		ready "Список разблокировки восстановлен"
		if mv -f "${UNBLOCK_LIST_FILE}.kvas" "${UNBLOCK_LIST_FILE}" ; then
			when_ok "УСПЕШНО"
		else
			when_bad "ОШИБКА"
			log_in_file "ОШИБКА: при восстановлении списка разблокировки"
			exit 1
		fi
	else
		log_in_file "УСТАНОВЛЕН список разблокировки ПО УМОЛЧАНИЮ."
		ready "Копируем файл со списком разблокировки по умолчанию"
		if cp /opt/apps/kvas/etc/conf/hosts.list "${UNBLOCK_LIST_FILE}" &>/dev/null ; then
			when_ok "ГОТОВО"
		else
			when_bad "ОШИБКА"
			log_in_file "ОШИБКА: при копировании списка разблокировки по умолчанию"
			exit 1
		fi
	fi

}

#------------------------------------------------------
# 	ВОССТАНАВЛИВАЕМ СОСТОЯНИЕ AdGuardHome,
# 	КОТОРОЕ БЫЛО ПЕРЕД УСТАНОВКОЙ ПАКЕТА КВАС
#------------------------------------------------------
restore_adguard(){

	agh_service=/opt/etc/init.d/S99adguardhome
	ready "Восстанавливаем службу AdGuardHome"
	if [ -f "${KVAS_BACKUP_PATH}/S99adguardhome.origin" ]; then

		cp "${KVAS_BACKUP_PATH}/S99adguardhome.origin" "${agh_service}"
		[ -f /opt/etc/AdGuardHome/AdGuardHome.yaml ] && \
			cp /opt/etc/AdGuardHome/AdGuardHome.yaml /opt/bin/AdGuardHome.yaml
	fi

	if /opt/etc/init.d/S99adguardhome status | grep -q "alive" ; then
		sed -i '/case/,/esac/ s/^\(.*\)/#\1/; /\*)/,/;;/ s/#\(.*rc.func\)/\1/' "${agh_service}"
		"${agh_service}" restart &> /dev/null
	fi
	[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
}

#------------------------------------------------------
# 	ОСТАНАВЛИВАЕМ dnsmasq
#------------------------------------------------------
stop_dnsmasq(){

	if /opt/etc/init.d/S56dnsmasq status | grep -q "alive"; then
		ready "Останавливаем службу dnsmasq "
		/opt/etc/init.d/S56dnsmasq stop &> /dev/null
		[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	fi
	ready "Архивируем файл конфигурации службы dnsmasq"
	mv /opt/etc/init.d/S56dnsmasq /opt/etc/init.d/K56dnsmasq
	[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	print_line
	warning "Файл сохранен, как /opt/etc/init.d/K56dnsmasq"
	print_line
}


#------------------------------------------------------
# 	ОСТАНАВЛИВАЕМ dnscrypt-proxy2
#------------------------------------------------------
stop_crypt(){
	if /opt/etc/init.d/S09dnscrypt-proxy2 status | grep -q "alive"; then
		ready "Останавливаем службу dnscrypt-proxy2 "
		/opt/etc/init.d/S09dnscrypt-proxy2 stop &> /dev/null
		[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	fi

	ready "Архивируем файл конфигурации службы dnscrypt-proxy2"
	mv /opt/etc/init.d/S09dnscrypt-proxy2 /opt/etc/init.d/K09dnscrypt-proxy2
	[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	print_line
	warning "Файл сохранен, как /opt/etc/init.d/K09dnscrypt-proxy2"
}

#------------------------------------------------------
# 	УДАЛЕНИЕ ФАЙЛОВ КОНФИГУРАЦИИ
#------------------------------------------------------
rm_package_files(){

	full=${1:-no}
	ready "Удаляем все файлы пакета Квас вместе с архивами"

	if [ "${full}" = full ] ; then
		[ -f /opt/etc/hosts.list ] && mv -f /opt/etc/hosts.list /opt/etc/hosts.list.kvas
		[ -d /opt/tmp/adblock ] && rm -rf /opt/tmp/adblock
		rm -fr /opt/etc/kvas*
		rm -fr /opt/etc/hosts.list
		rm -fr /opt/etc/ads_exception.list
		rm -f /opt/etc/inface_equals
		rm -f /opt/etc/cron.5mins/ipset.kvas
		rm -rf /opt/etc/.kvas /opt/etc/shadowsocks.json.kvas
		rm -f /opt/etc/hosts.list.kvas /opt/etc/adblock.sources.kvas
	fi

	[ -f /opt/etc/ndm/fs.d/100-vpn ] && rm -f /opt/etc/ndm/fs.d/100-vpn
	[ -f /opt/etc/ndm/fs.d/100-ipset ] && rm -f /opt/etc/ndm/fs.d/100-ipset

	[ -f /opt/etc/ndm/ifstatechanged.d/100-unblock-vpn ] && rm -f /opt/etc/ndm/ifstatechanged.d/100-unblock-vpn

	[ -f /opt/etc/ndm/netfilter.d/100-vpn-mark ] && rm -f /opt/etc/ndm/netfilter.d/100-vpn-mark
	[ -f /opt/etc/ndm/netfilter.d/100-proxy-redirect ] && rm -f /opt/etc/ndm/netfilter.d/100-proxy-redirect
	[ -f /opt/etc/ndm/netfilter.d/100-dns-local ] && rm -f /opt/etc/ndm/netfilter.d/100-dns-local

	[ -f /opt/etc/ndm/wan.d/internet-up ] && rm -f /opt/etc/ndm/wan.d/internet-up

	rm -rf /opt/bin/kvas
	rm -fr /opt/tmp/*kvas*
	rm -fr /opt/etc/adblock
	rm -fr /opt/tmp/host*
	rm -f /opt/lib/opkg/info/kvas*
	rm -fr /opt/apps/kvas

	del_period_update &>/dev/null
}

set_previous_condition(){

	full=${1:-no}
	ready "Удаляем файлы конфигурации..."
	if rm_package_files "${full}" &>/dev/null ; then when_ok "УСПЕШНО"; else when_bad "ОШИБКА"; fi

	if [ -f /opt/etc/crontab ]; then
		ready "Удаляем данные из cron..."
		sed -i '/ipset/d' /opt/etc/crontab &>/dev/null && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	fi
	#------------------------------------------------------
	# 	ОЧИЩЕНИЕ ВСЕХ ПРАВИЛ И ТАБЛИЦ
	#------------------------------------------------------
	ready "Очищаем все правила и таблицы..."
	ip4_firewall_flush_all_rules &>/dev/null
	ip4_flush_all_tables &>/dev/null
	if [ $? = 0 ]; then when_ok "УСПЕШНО"; else when_bad "ОШИБКА"; fi

	if [ -f /opt/etc/init.d/S99adguardhome ]; then
		restore_adguard
	fi

	if [ -f /opt/etc/init.d/S56dnsmasq ] ; then
		stop_dnsmasq
	fi
	if [ -f /opt/etc/init.d/S09dnscrypt-proxy2 ]; then
		stop_crypt
	fi


}



setup_print_finish(){
	print_line
	log_in_file line
	log_in_file "Установка завершена: $(date "${DATE_FORMAT}")"
	echo "Установка КВАСа завершена."
	echo -e "Для общей справки наберите ${BLUE}kvas help${NOCL}"
}


cmd_install(){
#	Если режим обновления, то не спрашиваем про выбор соединения, а просто берем его из файла конфигурации Кваса
	update_mode=${1:-false}

	LOG_HEADER="PACKAGE INSTALLATION"
	# Пишем сообщение в лог роутера о начале установки пакета
	log_alert "УСТАНОВКА ПАКЕТА КВАС" "${LOG_HEADER}"

#	обновляем itpables
	opkg update &> /dev/null
	opkg install iptables &> /dev/null

	setup_print_welcome
	mkdir -p "${KVAS_BACKUP_PATH}"
	cat /dev/null > "${INSTALL_LOG}"

	ln -sf /opt/apps/kvas/bin/main/ipset /opt/etc/cron.5mins/ipset.kvas

	setup_test_provider_dns

	[ -f "${KVAS_START_FILE}" ] || cp -f /opt/apps/kvas/etc/init.d/S96kvas "${KVAS_START_FILE}"
	chmod +x "${KVAS_START_FILE}"

	#------------------------------------------------------
	# Отключаем IPv6
	#------------------------------------------------------
	if [ "$(ipv6_status)" = 0 ]; then
		ipv6_inface_off "$(get_defaultgw_interface)"
	fi

	local_ip=$(get_router_ip)
	set_config_value DNSMASQ_LISTEN_IP "${local_ip}"


	#------------------------------------------------------
	# Сейчас необходимо выбрать VPN интерфейс для работы пакета
	#------------------------------------------------------
	if [ "${update_mode}" ] && [ -f "${KVAS_CONFIG_BACKUP}" ]; then
#		восстанавливаем файл конфигурации
		cp -f "${KVAS_CONFIG_BACKUP}" "${KVAS_CONF_FILE}"

		inface_entware=$(get_config_value INFACE_ENT)
		cli_inface=$(get_config_value INFACE_CLI)

#		Проверяем были ли внесены изменения в файл конфигурации
		if [ -z "${inface_entware}" ] || [ -z "${cli_inface}" ] ; then
			echo -e "${RED}Файл конфигурации КВАСа™ был модифицирован и не содержит данных о текущих интерфейсах!${NOCL}"
			echo -e "${GREEN}Инициируем процедуру выбора интерфейсов...${NOCL}"
			print_line
			#	запрашиваем выбор интерфейса
			cmd_interface_change no install
		else
#			Если изменений не было, то восстанавливаем соединение
			switch_vpn_on "${inface_entware}" "${cli_inface}"
		fi

	else
#		запрашиваем выбор интерфейса
		cmd_interface_change no install
	fi
	log_in_file "$(cmd_vpn_status)"
	print_line
	#------------------------------------------------------
	# AdGuard Home
	#------------------------------------------------------
	setup_adguard

	#------------------------------------------------------
	# ВОССТАНАВЛИВАЕМ ФАЙЛ СО СПИСКОМ РАЗБЛОКИРОВКИ
	#------------------------------------------------------
	setup_restore_prev_conf

	#----------------------------------------------------------
	#
	# 	В случае, если установить AdGuard Home отказались
	# 	или не был обнаружен сервис AdGuard Home
	# 	AdGuard Home подменяет сразу несколько сервисов
	# 	таких как dnsmasq + dnscrypt_proxy2 + блокировка рекламы
	#
	#----------------------------------------------------------

	if [ "${ANSWER_AGH}" = n ]; then
		if [ -f "${ADGUARDHOME_DEMON}" ]; then
			if "${ADGUARDHOME_DEMON}" status | grep -q alive; then
				"${ADGUARDHOME_DEMON}" stop &> /dev/null
			fi
		fi

		#------------------------------------------------------
		# DNSMASQ
		#------------------------------------------------------
		dnsmasq_install 'install'
		#------------------------------------------------------
		# DNSCRYPT-PROXY2
		#------------------------------------------------------
		dns_crypt_install
		log_in_file "Шифрование DNS трафика (dnscrypt-proxy2) ВКЛЮЧЕНО."
		#------------------------------------------------------
		# Блокировка рекламы
		#------------------------------------------------------
		log_in_file "Блокировка рекламы НЕ УСТАНОВЛЕНА.."
		print_line
	#	fi
	fi


	#------------------------------------------------------
	# Если есть подключенные гостевые сети
	#------------------------------------------------------
	[ -n "$(get_guest_inface_list_from_config)" ] && {

		ready "Подключаем гостевые сети к выбранному VPN подключению..."
		set_guest_nets_rules && when_ok "УСПЕШНО" || when_bad "ОШИБКА"

	}

	[ -f /opt/etc/cron.5mins/check_vpn ] || {
		ready "Устанавливаем проверку зависания VPN соединения в cron."
		ln -s /opt/apps/kvas/bin/main/check_vpn /opt/etc/cron.5mins/check_vpn && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	}


	#------------------------------------------------------
	# 	Запускаем КВАС в работу
	#------------------------------------------------------
	ready "Запускаем КВАС в работу"
	if cmd_kvas_init &> /dev/null ; then
		when_ok "УСПЕШНО"
	else
		when_bad "ОШИБКА"
		ready "Пробуем перезапустить КВАС снова"
		if cmd_kvas_init &> /dev/null ; then
			when_ok "УСПЕШНО"
		else
			when_bad "ОШИБКА"
			mess="Проблема при запуске КВАСа"
			log_in_file "ОШИБКА: ${mess}"
			exit 1
		fi
	fi

	setup_print_finish
	set_config_value "SETUP_FINISHED" true
	# Пишем сообщение в лог роутера о начале установки пакета
	log_alert "УСТАНОВКА ПАКЕТА КВАС ЗАВЕРШЕНА!" "${LOG_HEADER}"
}


# ------------------------------------------------------------------------------------------
#
#	 Удаляет полностью пакет Квас с устройства
#	 $1 - тип удаления
#		<ПУСТО> - если без аргументов, то удаляем без удаления пакетов, но со всеми архивами
#	 	full - удаляем полностью со всеми ранее установленными пакетами и файлами архивов
#
# ------------------------------------------------------------------------------------------
cmd_uninstall() {

	rm_type=${1}; auto=''; sure="${2}"

	[ -n "${APP_RELEASE}" ] && rel="-${APP_RELEASE}" || rel=''
	echo -e "Удаление пакета ${GREEN}КВАС™${NOCL} версия ${GREEN}${APP_VERSION}${rel}${NOCL}..."


	if echo "${rm_type}" | grep -qEi 'y|Yes|да' || echo "${sure}" | grep -qEi 'y|Yes|да' ; then
		answer=y; sure=y
	else
		print_line
		answer=''; read_ynq_timer "Вы уверены в удалении пакета ?" answer N 12
		if [ "${answer}" = q ] ; then exit_q; exit 1; fi
	fi

	if echo "${answer}" | grep -qi y ; then

		[ -z "${rm_type}" ] && mess="Удаляем все архивные данные, зависимые пакеты оставляем."
		if [ "${rm_type}" = full ]; then
			mess="Удаляем все архивные данные и все зависимые пакеты..."
			auto='--autoremove'
			rm -f /opt/etc/init/K56dnsmasq  /opt/etc/init/K09dnscrypt-proxy2
			! [ -f "${SHADOWSOCKS_CONF}" ] && touch "${SHADOWSOCKS_CONF}"
		else
			[ -f "${SHADOWSOCKS_CONF}" ] && cp "${SHADOWSOCKS_CONF}" "${SHADOWSOCKS_CONF_BACKUP}"
			[ -f "${KVAS_CONF_FILE}" ] && cp "${KVAS_CONF_FILE}" "${KVAS_CONFIG_BACKUP}"
		fi
		[ -z "${sure}" ] && print_line
		echo "${mess}"
		opkg remove kvas "${auto}" &> /dev/null #&& when_ok "УСПЕШНО" || when_bad "ОШИБКА"
		print_line
		set_previous_condition "${rm_type}"
		print_line
		echo "Удаление КВАСа завершено."
	fi
}
